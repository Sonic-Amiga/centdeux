000000: 0x008b   1 0 0 0 1 0 1 1	// 8b - HLT Halt System
0x0001: 0x0001   0 0 0 0 0 0 0 1	// 01 - NOP
0x0002: 0x0019   0 0 0 1 1 0 0 1	// 19 - Set Fault
0x0003: 0x004f   0 1 0 0 1 1 1 1	// 4f - Reset Fault
0x0004: 0x008b   1 0 0 0 1 0 1 1	// 8b - EI Enable Interrupts
0x0005: 0x008b   1 0 0 0 1 0 1 1	// 8b - DI Disable Interrupts
0x0006: 0x0085   1 0 0 0 0 1 0 1	// 85 - (L) SL Set Link
0x0007: 0x00af   1 0 1 0 1 1 1 1	// af - (L) RL Reset Link
0x0008: 0x007b   0 1 1 1 1 0 1 1	// 7b - (L) CL Complement Link
0x0009: 0x0093   1 0 0 1 0 0 1 1	// 93 - RSR Return from Subroutine
0x000a: 0x008b   1 0 0 0 1 0 1 1	// 8b - RI Return from Interrupt
0x000b: 0x008e   1 0 0 0 1 1 1 0	// 8e - RIM Return from Interrupt Modified
0x000c: 0x00ca   1 1 0 0 1 0 1 0	// ca - (was ELO - Enable Link Out on ee200)
0x000d: 0x007e   0 1 1 1 1 1 1 0	// 7e - PCX - Transfer PC to X regiser
0x000e: 0x008b   1 0 0 0 1 0 1 1	// 8b - DLY 4.55ms Delay
0x000f: 0x008b   1 0 0 0 1 0 1 1	// 8b
0x0010: 0x00fd   1 1 1 1 1 1 0 1	// fd - (L) BL/BNL Branch if Link Set/Clear
0x0011: 0x00fd   1 1 1 1 1 1 0 1
0x0012: 0x00fc   1 1 1 1 1 1 0 0	// fc - (F) BF/BNF Branch if Fault Set/Clear
0x0013: 0x00fc   1 1 1 1 1 1 0 0
0x0014: 0x00fb   1 1 1 1 1 0 1 1	// fb - (V) BZ/BNZ Branch if Equal-to Zero / Not-equal-to Zero
0x0015: 0x00fb   1 1 1 1 1 0 1 1	
0x0016: 0x00fa   1 1 1 1 1 0 1 0	// fa - (M) BM/BP Branch if Minus Set/Clear
0x0017: 0x00fa   1 1 1 1 1 0 1 0
0x0018: 0x0056   0 1 0 1 0 1 1 0	// 56 - BGZ Branch if Greater-than Zero
0x0019: 0x00f9   1 1 1 1 1 0 0 1	// f9 - BLE Branch if Less-than or Equal-to Zero
0x001a: 0x00fe   1 1 1 1 1 1 1 0	// fe - BS1 Branch if Sense Switch 1 is set
0x001b: 0x00ee   1 1 1 0 1 1 1 0	// ee - BS2 Branch if Sense Switch 2 is set
0x001c: 0x00de   1 1 0 1 1 1 1 0	// de - BS3 Branch if Sense Switch 3 is set
0x001d: 0x00ce   1 1 0 0 1 1 1 0	// ce - BS4 Branch if Sense Switch 4 is set
0x001e: 0x00ba   1 0 1 1 1 0 1 0	// ba - (was BTM - Branch on TTY MARK on ee200)
0x001f: 0x0007   0 0 0 0 0 1 1 1	// 07 - (was BEP - Branch on Even Parity on ee200)
0x0020: 0x00ef   1 1 1 0 1 1 1 1	// ef indicates an explicit byte size one operand ALU instruction
0x0021: 0x00ef   1 1 1 0 1 1 1 1
0x0022: 0x00ef   1 1 1 0 1 1 1 1
0x0023: 0x00ef   1 1 1 0 1 1 1 1
0x0024: 0x00ef   1 1 1 0 1 1 1 1
0x0025: 0x00ef   1 1 1 0 1 1 1 1
0x0026: 0x00ef   1 1 1 0 1 1 1 1
0x0027: 0x00ef   1 1 1 0 1 1 1 1
0x0028: 0x001d   0 0 0 1 1 1 0 1	// 1d - INCA Increment B by 1
0x0029: 0x001e   0 0 0 1 1 1 1 0	// 1e - DCAB Decrement B by 1
0x002a: 0x0022   0 0 1 0 0 0 1 0	// 22 - CLAB Clear A
0x002b: 0x0023   0 0 1 0 0 0 1 1	// 23 - IVAB Invert A
0x002c: 0x0024   0 0 1 0 0 1 0 0	// 24 - SRAB Shift A right by 1
0x002d: 0x0021   0 0 1 0 0 0 0 1	// 21 - SLAB Shift A left by 1
0x002e: 0x008b   1 0 0 0 1 0 1 1	// 8b
0x002f: 0x008b   1 0 0 0 1 0 1 1	// 8b
0x0030: 0x00f8   1 1 1 1 1 0 0 0	// f8 indicates an explicit word size one operand ALU instruction
0x0031: 0x00f8   1 1 1 1 1 0 0 0
0x0032: 0x00f8   1 1 1 1 1 0 0 0
0x0033: 0x00f8   1 1 1 1 1 0 0 0
0x0034: 0x00f8   1 1 1 1 1 0 0 0
0x0035: 0x00f8   1 1 1 1 1 0 0 0
0x0036: 0x00f8   1 1 1 1 1 0 0 0
0x0037: 0x00f8   1 1 1 1 1 0 0 0
0x0038: 0x002e   0 0 1 0 1 1 1 0	// 2e - INA Incremen A by 1
0x0039: 0x002f   0 0 1 0 1 1 1 1	// 2f - DCA Decrement A by 1
0x003a: 0x002a   0 0 1 0 1 0 1 0	// 2a - CLA Clear A
0x003b: 0x0025   0 0 1 0 0 1 0 1	// 25 - IVA Invert A
0x003c: 0x004d   0 1 0 0 1 1 0 1	// 4d - SRA Shift register A right by 1
0x003d: 0x004e   0 1 0 0 1 1 1 0	// 4e - SLA Shift register A left by 1
0x003e: 0x001f   0 0 0 1 1 1 1 1	// 1f - INX/DCX Increment/Decrement X (word) by 1
0x003f: 0x001f   0 0 0 1 1 1 1 1
0x0040: 0x0045   0 1 0 0 0 1 0 1	// 45 indicates an explict byte size two operand ALU instruction
0x0041: 0x0045   0 1 0 0 0 1 0 1
0x0042: 0x0045   0 1 0 0 0 1 0 1
0x0043: 0x0045   0 1 0 0 0 1 0 1
0x0044: 0x0045   0 1 0 0 0 1 0 1
0x0045: 0x0045   0 1 0 0 0 1 0 1
0x0046: 0x004b   0 1 0 0 1 0 1 1	// 4b
0x0047: 0x00a0   1 0 1 0 0 0 0 0	// a0
0x0048: 0x0041   0 1 0 0 0 0 0 1	// 41 indicates an implicit byte size two operand ALU instruction
0x0049: 0x0041   0 1 0 0 0 0 0 1
0x004a: 0x0041   0 1 0 0 0 0 0 1
0x004b: 0x0040   0 1 0 0 0 0 0 0	// 40 indicate an implicit transfer (ALU) instruction
0x004c: 0x0040   0 1 0 0 0 0 0 0
0x004d: 0x0040   0 1 0 0 0 0 0 0
0x004e: 0x0040   0 1 0 0 0 0 0 0
0x004f: 0x0040   0 1 0 0 0 0 0 0
0x0050: 0x0089   1 0 0 0 1 0 0 1	// 89 indicates and explict word size two operand ALU instruction
0x0051: 0x0089   1 0 0 0 1 0 0 1
0x0052: 0x0089   1 0 0 0 1 0 0 1
0x0053: 0x0089   1 0 0 0 1 0 0 1
0x0054: 0x0089   1 0 0 0 1 0 0 1
0x0055: 0x0089   1 0 0 0 1 0 0 1
0x0056: 0x007c   0 1 1 1 1 1 0 0	// 7c
0x0057: 0x007d   0 1 1 1 1 1 0 1	// 7d
0x0058: 0x0043   0 1 0 0 0 0 1 1	// 43 indicates an implicit word size two operand ALU instruction
0x0059: 0x0043   0 1 0 0 0 0 1 1
0x005a: 0x0043   0 1 0 0 0 0 1 1
0x005b: 0x0040   0 1 0 0 0 0 0 0	// 40 indicate an implicit transfer (ALU) instruction
0x005c: 0x0040   0 1 0 0 0 0 0 0
0x005d: 0x0040   0 1 0 0 0 0 0 0
0x005e: 0x0040   0 1 0 0 0 0 0 0
0x005f: 0x0040   0 1 0 0 0 0 0 0
0x0060: 0x0014   0 0 0 1 0 1 0 0	// 14 - LDX literal
0x0061: 0x0065   0 1 1 0 0 1 0 1	// 65 - LDX addressed
0x0062: 0x0065   0 1 1 0 0 1 0 1
0x0063: 0x0065   0 1 1 0 0 1 0 1
0x0064: 0x0065   0 1 1 0 0 1 0 1
0x0065: 0x0065   0 1 1 0 0 1 0 1
0x0066: 0x00b7   1 0 1 1 0 1 1 1	// b7
0x0067: 0x00b0   1 0 1 1 0 0 0 0	// b0
0x0068: 0x0031   0 0 1 1 0 0 0 1	// 31 - STX literal
0x0069: 0x0064   0 1 1 0 0 1 0 0	// 64 - STX addressed
0x006a: 0x0064   0 1 1 0 0 1 0 0
0x006b: 0x0064   0 1 1 0 0 1 0 0
0x006c: 0x0064   0 1 1 0 0 1 0 0
0x006d: 0x0064   0 1 1 0 0 1 0 0
0x006e: 0x0050   0 1 0 1 0 0 0 0	// 50
0x006f: 0x0053   0 1 0 1 0 0 1 1	// 03
0x0070: 0x0009   0 0 0 0 1 0 0 1	// 09 - JMP literal
0x0071: 0x0054   0 1 0 1 0 1 0 0	// 54 - JMP addressed
0x0072: 0x0054   0 1 0 1 0 1 0 0
0x0073: 0x0054   0 1 0 1 0 1 0 0
0x0074: 0x0054   0 1 0 1 0 1 0 0
0x0075: 0x0054   0 1 0 1 0 1 0 0
0x0076: 0x008b   1 0 0 0 1 0 1 1	// 8b
0x0077: 0x0089   1 0 0 0 1 0 0 1	// 89 - shows up one instruction earlier than expected
0x0078: 0x0089   1 0 0 0 1 0 0 1	// 89 - JSR literal
0x0079: 0x0064   0 1 1 0 0 1 0 0	// 64 - JSR addresed
0x007a: 0x0064   0 1 1 0 0 1 0 0
0x007b: 0x0064   0 1 1 0 0 1 0 0
0x007c: 0x0064   0 1 1 0 0 1 0 0
0x007d: 0x0064   0 1 1 0 0 1 0 0
0x007e: 0x0090   1 0 0 1 0 0 0 0	// 90
0x007f: 0x0090   1 0 0 1 0 0 0 0	
0x0080: 0x001b   0 0 0 1 1 0 1 1	// 1b - LDAB literal
0x0081: 0x0051   0 1 0 1 0 0 0 1	// 51 - LDAB addressed
0x0082: 0x0051   0 1 0 1 0 0 0 1
0x0083: 0x0051   0 1 0 1 0 0 0 1
0x0084: 0x0051   0 1 0 1 0 0 0 1
0x0085: 0x0051   0 1 0 1 0 0 0 1
0x0086: 0x008b   1 0 0 0 1 0 1 1	// 8b
0x0087: 0x003d   0 0 1 1 1 1 0 1	// 3d
0x0088: 0x0033   0 0 1 1 0 0 1 1	// 33 - LDAB implicit register indexed (A)
0x0089: 0x0035   0 0 1 1 0 1 0 1	// 35 - LDAB implicit register indexed 89(B)-8f(P)
0x008a: 0x0035   0 0 1 1 0 1 0 1
0x008b: 0x0035   0 0 1 1 0 1 0 1
0x008c: 0x0035   0 0 1 1 0 1 0 1
0x008d: 0x0035   0 0 1 1 0 1 0 1
0x008e: 0x0035   0 0 1 1 0 1 0 1
0x008f: 0x0035   0 0 1 1 0 1 0 1
0x0090: 0x0015   0 0 0 1 0 1 0 1	// 15 - LDA literal
0x0091: 0x0054   0 1 0 1 0 1 0 0	// 54 - LDA addressed (same as JMP addressed)
0x0092: 0x0054   0 1 0 1 0 1 0 0
0x0093: 0x0054   0 1 0 1 0 1 0 0
0x0094: 0x0054   0 1 0 1 0 1 0 0
0x0095: 0x0054   0 1 0 1 0 1 0 0
0x0096: 0x008b   1 0 0 0 1 0 1 1	// 8b
0x0097: 0x0009   0 0 0 0 1 0 0 1	// 09
0x0098: 0x0033   0 0 1 1 0 0 1 1	// 33 - LDA implicit register indexed (A) (same as LDAB)
0x0099: 0x0035   0 0 1 1 0 1 0 1	// 35 - LDA implicit register indexed 99(B)-9f(P) (same as LDAB)
0x009a: 0x0035   0 0 1 1 0 1 0 1
0x009b: 0x0035   0 0 1 1 0 1 0 1
0x009c: 0x0035   0 0 1 1 0 1 0 1
0x009d: 0x0035   0 0 1 1 0 1 0 1
0x009e: 0x0035   0 0 1 1 0 1 0 1
0x009f: 0x0035   0 0 1 1 0 1 0 1
0x00a0: 0x002b   0 0 1 0 1 0 1 1	// 2b - STAB literal
0x00a1: 0x0051   0 1 0 1 0 0 0 1	// 51 - STAB addressed
0x00a2: 0x0051   0 1 0 1 0 0 0 1
0x00a3: 0x0051   0 1 0 1 0 0 0 1
0x00a4: 0x0051   0 1 0 1 0 0 0 1
0x00a5: 0x0051   0 1 0 1 0 0 0 1
0x00a6: 0x008b   1 0 0 0 1 0 1 1	// 8b
0x00a7: 0x0009   0 0 0 0 1 0 0 1	// 09
0x00a8: 0x0033   0 0 1 1 0 0 1 1	// 33 - STAB implicit register indexed (A) (same as LDAB/LDA)
0x00a9: 0x0035   0 0 1 1 0 1 0 1	// 35 - STAB (See LDAB)
0x00aa: 0x0035   0 0 1 1 0 1 0 1
0x00ab: 0x0035   0 0 1 1 0 1 0 1
0x00ac: 0x0035   0 0 1 1 0 1 0 1
0x00ad: 0x0035   0 0 1 1 0 1 0 1
0x00ae: 0x0035   0 0 1 1 0 1 0 1
0x00af: 0x0035   0 0 1 1 0 1 0 1
0x00b0: 0x003c   0 0 1 1 1 1 0 0	// 3c - STA literal
0x00b1: 0x0054   0 1 0 1 0 1 0 0	// 54 - STA addressed (same as LDA/JMP)
0x00b2: 0x0054   0 1 0 1 0 1 0 0
0x00b3: 0x0054   0 1 0 1 0 1 0 0
0x00b4: 0x0054   0 1 0 1 0 1 0 0
0x00b5: 0x0054   0 1 0 1 0 1 0 0
0x00b6: 0x008b   1 0 0 0 1 0 1 1	// 8b
0x00b7: 0x0009   0 0 0 0 1 0 0 1	// 09
0x00b8: 0x0033   0 0 1 1 0 0 1 1	// 33 - STA implicit register indexed (A) (same as LDAB/LDA/STAB)
0x00b9: 0x0035   0 0 1 1 0 1 0 1	// 35 - STA (See LDAB)
0x00ba: 0x0035   0 0 1 1 0 1 0 1
0x00bb: 0x0035   0 0 1 1 0 1 0 1
0x00bc: 0x0035   0 0 1 1 0 1 0 1
0x00bd: 0x0035   0 0 1 1 0 1 0 1
0x00be: 0x0035   0 0 1 1 0 1 0 1
0x00bf: 0x0035   0 0 1 1 0 1 0 1
0x00c0: 0x002c   0 0 1 0 1 1 0 0	// 2c - LDBB literal
0x00c1: 0x0060   0 1 1 0 0 0 0 0	// 60 - LDBB addressed
0x00c2: 0x0060   0 1 1 0 0 0 0 0
0x00c3: 0x0060   0 1 1 0 0 0 0 0
0x00c4: 0x0060   0 1 1 0 0 0 0 0
0x00c5: 0x0060   0 1 1 0 0 0 0 0
0x00c6: 0x008b   1 0 0 0 1 0 1 1	// 8b
0x00c7: 0x0009   0 0 0 0 1 0 0 1	// 09
0x00c8: 0x0034   0 0 1 1 0 1 0 0	// 34 - LDBB implicit register indexed (A)
0x00c9: 0x0036   0 0 1 1 0 1 1 0	// 36 - LDBB implicit register indexed ca(B)-cf(P)
0x00ca: 0x0036   0 0 1 1 0 1 1 0
0x00cb: 0x0036   0 0 1 1 0 1 1 0
0x00cc: 0x0036   0 0 1 1 0 1 1 0
0x00cd: 0x0036   0 0 1 1 0 1 1 0
0x00ce: 0x0036   0 0 1 1 0 1 1 0
0x00cf: 0x0036   0 0 1 1 0 1 1 0
0x00d0: 0x003e   0 0 1 1 1 1 1 0	// 3e - LDB literal
0x00d1: 0x0062   0 1 1 0 0 0 1 0	// 62 - LDB addressed
0x00d2: 0x0062   0 1 1 0 0 0 1 0
0x00d3: 0x0062   0 1 1 0 0 0 1 0
0x00d4: 0x0062   0 1 1 0 0 0 1 0
0x00d5: 0x0062   0 1 1 0 0 0 1 0
0x00d6: 0x006b   0 1 1 0 1 0 1 1	// 6b
0x00d7: 0x008b   1 0 0 0 1 0 1 1	// 8b
0x00d8: 0x0034   0 0 1 1 0 1 0 0	// 34 - LDB implicit register indexed (A) (same as LDBB)
0x00d9: 0x0036   0 0 1 1 0 1 1 0	// 36 - LDB implicit (See LDBB)
0x00da: 0x0036   0 0 1 1 0 1 1 0
0x00db: 0x0036   0 0 1 1 0 1 1 0
0x00dc: 0x0036   0 0 1 1 0 1 1 0
0x00dd: 0x0036   0 0 1 1 0 1 1 0
0x00de: 0x0036   0 0 1 1 0 1 1 0
0x00df: 0x0036   0 0 1 1 0 1 1 0
0x00e0: 0x0026   0 0 1 0 0 1 1 0	// 26 - STBB literal
0x00e1: 0x0060   0 1 1 0 0 0 0 0	// 60 - STBB addressed (same as LDBB)
0x00e2: 0x0060   0 1 1 0 0 0 0 0
0x00e3: 0x0060   0 1 1 0 0 0 0 0
0x00e4: 0x0060   0 1 1 0 0 0 0 0
0x00e5: 0x0060   0 1 1 0 0 0 0 0
0x00e6: 0x008b   1 0 0 0 1 0 1 1	// 8b
0x00e7: 0x0009   0 0 0 0 1 0 0 1	// 09
0x00e8: 0x0034   0 0 1 1 0 1 0 0	// 34 - STBB implicit (See LDBB)
0x00e9: 0x0036   0 0 1 1 0 1 1 0	// 36 - STBB implicit (See LDBB)
0x00ea: 0x0036   0 0 1 1 0 1 1 0
0x00eb: 0x0036   0 0 1 1 0 1 1 0
0x00ec: 0x0036   0 0 1 1 0 1 1 0
0x00ed: 0x0036   0 0 1 1 0 1 1 0
0x00ee: 0x0036   0 0 1 1 0 1 1 0
0x00ef: 0x0036   0 0 1 1 0 1 1 0
0x00f0: 0x0030   0 0 1 1 0 0 0 0	// 30 - STB literal
0x00f1: 0x0062   0 1 1 0 0 0 1 0	// 62 - STB addressed (Same as LDB)
0x00f2: 0x0062   0 1 1 0 0 0 1 0
0x00f3: 0x0062   0 1 1 0 0 0 1 0
0x00f4: 0x0062   0 1 1 0 0 0 1 0
0x00f5: 0x0062   0 1 1 0 0 0 1 0
0x00f6: 0x008b   1 0 0 0 1 0 1 1	// 8b
0x00f7: 0x0013   0 0 0 1 0 0 1 1	// 13
0x00f8: 0x0034   0 0 1 1 0 1 0 0	// 34 - STB implicit (See LDBB)
0x00f9: 0x0036   0 0 1 1 0 1 1 0	// 36 - STB implicit (See LDBB)
0x00fa: 0x0036   0 0 1 1 0 1 1 0
0x00fb: 0x0036   0 0 1 1 0 1 1 0
0x00fc: 0x0036   0 0 1 1 0 1 1 0
0x00fd: 0x0036   0 0 1 1 0 1 1 0
0x00fe: 0x0036   0 0 1 1 0 1 1 0
0x00ff: 0x0036   0 0 1 1 0 1 1 0
