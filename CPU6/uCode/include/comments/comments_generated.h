/* Autogenerated file */
#include <stdint.h>

typedef struct comment_t { uint32_t addr; char *comment; } comment_t;

comment_t comments[]= {
	{0x18b, "MAPROM Entry Point: Privledged Instructions (No protected mode implemented?)"},
	{0x18b, "MAPROM Entry Point: Unknown instructions 0x0f, 0x2e, 0x2f, 0x76, 0x86, 0x96, 0xa6, 0xb6, 0xc6, 0xd7, 0xe6, 0xf6"},
	{0x14b, "MAPROM Entry Point: Unknown instruction 0x46"},
	{0x1a0, "MAPROM Entry Point: Unknown instruction 0x47"},
	{0x17c, "MAPROM Entry Point: Unknown instruction 0x56"},
	{0x17d, "MAPROM Entry Point: Unknown instruction 0x57"},
	{0x1b7, "MAPROM Entry Point: Unknown instruction 0x66"},
	{0x1b0, "MAPROM Entry Point: Unknown instruction 0x67"},
	{0x150, "MAPROM Entry Point: Unknown instruction 0x6e"},
	{0x103, "MAPROM Entry Point: Unknown instruction 0x6f"},
	{0x190, "MAPROM Entry Point: Unknown instructions 0x7e, 0x7f"},
	{0x13d, "MAPROM Entry Point: Unknown instruction 0x87"},
	{0x109, "MAPROM Entry Point: Unknown instructions 0x97, 0xa7, 0xb7, 0xc7, 0xe7"},
	{0x16b, "MAPROM Entry Point: Unknown instruction 0xd6"},
	{0x113, "MAPROM Entry Point: Unknown instruction 0xf7"},
	{0x101, "MAPROM Entry Point: NOP"},
	{0x119, "MAPROM Entry Point: (F) Set Fault"},
	{0x14f, "MAPROM Entry Point: (F) Reset Fault"},
	{0x18b, "MAPROM Entry Point: EI Enable Interrupts"},
	{0x18b, "MAPROM Entry Point: DI Disable Interrupts"},
	{0x185, "MAPROM Entry Point: (L) SL Set Link"},
	{0x1af, "MAPROM Entry Point: (L) RL Reset Link"},
	{0x17b, "MAPROM Entry Point: (L) CL Complement Link"},
	{0x193, "MAPROM Entry Point: RSR Return from Subroutine"},
	{0x18b, "MAPROM Entry Point: RI Return from Interrupt"},
	{0x18e, "MAPROM Entry Point: RIM Return from Interrupt Modified"},
	{0x1ca, "MAPROM Entry Point: (was ELO - Enable Link Out on ee200)"},
	{0x17e, "MAPROM Entry Point: PCX - Transfer PC to X regiser"},
	{0x18b, "MAPROM Entry Point: DLY 4.55ms Delay"},
	{0x1fd, "MAPROM Entry Point: (L) BL/BNL Branch if Link Set/Clear"},
	{0x1fc, "MAPROM Entry Point: (F) BF/BNF Branch if Fault Set/Clear"},
	{0x1fb, "MAPROM Entry Point: (V) BZ/BNZ Branch if Equal-to Zero / Not-equal-to Zero"},
	{0x1fa, "MAPROM Entry Point: (M) BM/BP Branch if Minus Set/Clear"},
	{0x156, "MAPROM Entry Point: BGZ Branch if Greater-than Zero"},
	{0x1f9, "MAPROM Entry Point: BLE Branch if Less-than or Equal-to Zero"},
	{0x1fe, "MAPROM Entry Point: BS1 Branch if Sense Switch 1 is set"},
	{0x1ee, "MAPROM Entry Point: BS2 Branch if Sense Switch 2 is set"},
	{0x1de, "MAPROM Entry Point: BS3 Branch if Sense Switch 3 is set"},
	{0x1ce, "MAPROM Entry Point: BS4 Branch if Sense Switch 4 is set"},
	{0x1ba, "MAPROM Entry Point: (was BTM - Branch on TTY MARK on ee200)"},
	{0x107, "MAPROM Entry Point: (was BEP - Branch on Even Parity on ee200)"},
	{0x1ef, "MAPROM Entry Point: R Explicit byte sized one-operand ALU instruction"},
	{0x11d, "MAPROM Entry Point: A Implicit byte INCA Increment B by 1"},
	{0x11e, "MAPROM Entry Point: A Implicit byte DCAB Decrement B by 1"},
	{0x122, "MAPROM Entry Point: A Implicit byte CLAB Clear A"},
	{0x123, "MAPROM Entry Point: A Implicit byte IVAB Invert A"},
	{0x124, "MAPROM Entry Point: A Implicit byte SRAB Shift A right by 1"},
	{0x121, "MAPROM Entry Point: A Implicit byte SLAB Shift A left by 1"},
	{0x1f8, "MAPROM Entry Point: R Explicit word sized one-operand ALU instruction"},
	{0x12e, "MAPROM Entry Point: A Implicit word INA Increment A by 1"},
	{0x12f, "MAPROM Entry Point: A Implicit word DCA Decrement A by 1"},
	{0x12a, "MAPROM Entry Point: A Implicit word CLA Clear A"},
	{0x125, "MAPROM Entry Point: A Implicit word IVA Invert A"},
	{0x14d, "MAPROM Entry Point: A Implicit word SRA Shift register A right by 1"},
	{0x14e, "MAPROM Entry Point: A Implicit word SLA Shift register A left by 1"},
	{0x11f, "MAPROM Entry Point: X Implicit word INX/DCX Increment/Decrement X by 1"},
	{0x145, "MAPROM Entry Point: R,R Explicit byte sized two-operand ALU instruction"},
	{0x141, "MAPROM Entry Point: rr Implicit byte sized two-operand ALU instruction"},
	{0x189, "MAPROM Entry Point: R,R Explicit Word sized two-operand ALU instruction"},
	{0x143, "MAPROM Entry Point: rr Implicit Word sized two-operand ALU instruction"},
	{0x140, "MAPROM Entry Point: rr Implict Xrr register transfer"},
	{0x109, "MAPROM Entry Point: Literal JMP"},
	{0x189, "MAPROM Entry Point: Literal JSR"},
	{0x154, "MAPROM Entry Point: Addressed JMP (Same as A Addressed Word LD/ST)"},
	{0x164, "MAPROM Entry Point: Addressed JSR (Same as X Addressed Word LD/ST)"},
	{0x11b, "MAPROM Entry Point: A Literal LDAB"},
	{0x115, "MAPROM Entry Point: A Literal LDA"},
	{0x12b, "MAPROM Entry Point: A Literal STAB"},
	{0x13c, "MAPROM Entry Point: A Literal STA"},
	{0x151, "MAPROM Entry Point: A Addressed Byte LDAB/STAB"},
	{0x154, "MAPROM Entry Point: A Addressed Word LDA/STA"},
	{0x133, "MAPROM Entry Point: A Implicit LDA(B)/STA(B) Indexed by (A)"},
	{0x135, "MAPROM Entry Point: A Implicit LDA(B)/STA(B) Indexed by (B)-(P)"},
	{0x12c, "MAPROM Entry Point: B Literal LDBB"},
	{0x13e, "MAPROM Entry Point: B Literal LDB"},
	{0x126, "MAPROM Entry Point: B Literal STBB"},
	{0x130, "MAPROM Entry Point: B Literal STB"},
	{0x160, "MAPROM Entry Point: B Addressed Byte LDBB/STBB"},
	{0x162, "MAPROM Entry Point: B Addressed Word LDB/STB"},
	{0x134, "MAPROM Entry Point: B Implicit LDB(B)/STB(B) Indexed by (A)"},
	{0x136, "MAPROM Entry Point: B Implicit LDB(B)/STB(B) Indexed by (B)-(P)"},
	{0x131, "MAPROM Entry Point: X Literal STX"},
	{0x114, "MAPROM Entry Point: X Literal LDX"},
	{0x165, "MAPROM Entry Point: X Addressed Word LDX"},
	{0x164, "MAPROM Entry Point: X Addressed Word STX (Same as JSR)"},
	{0x000, "Beginning of uC"},
	{0x000, "sjsoftware: r05 <- 0; PTBR <- 0; Set F11 address 2 high"},
	{0x0b7, "sjsoftware: r07 <- 30; MDR <- 0 (from r05); Set F11 address 3 high"},
	{0x0b8, "sjsoftware: r11 <- 0; D9 <- 0; ??"},
	{0x1ec, "sjsoftware: RIR <- 16"},
	{0x1ed, "sjsoftware: ?"},
	{0x0b1, "sjsoftware: call 7e (page init);"},
	{0x0b2, "sjsoftware: result zero? Non zero loop to b1, else b3 (OR bit 1 is zero); r06 = 0. Loop 30 times"},
	{0x0b3, "sjsoftware: r11 < 0x7e; call 7e"},
	{0x0b4, "sjsoftware: r0 <- d3.11 output (poss dip switches or front panel); call 7e"},
	{0x0b5, "sjsoftware: test bit 1 of ALU input (possibly dip switch or front panel switch);"},
	{0x0b6, "sjsoftware: r0 <- 0; non-zero from test bb else b9; PTER <- 0"},
	{0x0b9, "sjsoftware: load MWR low; load PTER"},
	{0x0ba, "sjsoftware: load MWR high; jump to 0bc; turn on line 4 on F11?"},
	{0x0bb, "sjsoftware: r09 <- 30; RIR <- 30; jump to 71e (hard path)"},
	{0x0bc, "sjsoftware: load MAR; turn off line 6 on F11?"},
	{0x100, "sjsoftware: save loop address"},
	{0x101, "sjsoftware: r09 <- 0; SR <- ALU flags; RIR <- 0;"},
	{0x102, "sjsoftware: PTER <- 0; r8++"},
	{0x103, "sjsoftware: SEQR <- d3.10 output; r07 <- d3.10 output"},
	{0x104, "sjsoftware: mapped SEQR jump; SEQR <- r07; r01 <- ISA register 0"},
	{0x07e, "sjsoftware: MCR <- r05; r05 += 8 "},
	{0x07f, "sjsoftware: MWR high <- MCR; MCR <- r11; r11++;"},
	{0x080, "sjsoftware: load MAR"},
	{0x09d, "sjsoftware: load PT memory? ; r07--; return"},
	{0,0}
};
